Description: Remove the need of shaderc in vulkan support
 Seems not to be used by the use of the vulkan code in ogre-next
Forwarded: No
Last-Update: 2022-05-19
diff --git a/CMake/Packages/FindVulkan.cmake b/CMake/Packages/FindVulkan.cmake
index ce28772c..fa4135b7 100644
--- a/CMake/Packages/FindVulkan.cmake
+++ b/CMake/Packages/FindVulkan.cmake
@@ -1,4 +1,3 @@
-# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
 # file Copyright.txt or https://cmake.org/licensing for details.
 
 #[=======================================================================[.rst:
@@ -57,15 +56,6 @@ if(WIN32)
 			"$ENV{VULKAN_SDK}/Include"
 		)
 
-	find_path(Vulkan_SHADERC_INCLUDE_DIR
-		NAMES shaderc/shaderc.h
-		HINTS
-			"${OGRE_DEPENDENCIES_DIR}/include" "${ENV_OGRE_DEPENDENCIES_DIR}/include"
-			"${OGRE_SOURCE}/Dependencies/include"
-			"${OGRE_VULKAN_SDK}/Include"
-			"$ENV{VULKAN_SDK}/Include"
-		)
-
 	if(CMAKE_SIZEOF_VOID_P EQUAL 8)
 		set( VK_BIN "Bin" )
 		set( VK_LIB "Lib" )
@@ -85,24 +75,6 @@ if(WIN32)
 			"$ENV{VULKAN_SDK}/${VK_BIN}"
 		PATH_SUFFIXES "" Release RelWithDebInfo MinSizeRel Debug
 		)
-	find_library(Vulkan_SHADERC_LIB_REL
-		NAMES shaderc_combined
-		HINTS
-			"${OGRE_DEPENDENCIES_DIR}/lib" "${ENV_OGRE_DEPENDENCIES_DIR}/lib"
-			"${OGRE_SOURCE}/Dependencies/lib"
-			"${OGRE_VULKAN_SDK}/${VK_LIB}"
-			"${OGRE_VULKAN_SDK}/${VK_BIN}"
-			"$ENV{VULKAN_SDK}/${VK_LIB}"
-			"$ENV{VULKAN_SDK}/${VK_BIN}"
-		PATH_SUFFIXES "" Release RelWithDebInfo MinSizeRel
-		)
-	find_library(Vulkan_SHADERC_LIB_DBG
-		NAMES shaderc_combined
-		HINTS
-			"${OGRE_DEPENDENCIES_DIR}/lib" "${ENV_OGRE_DEPENDENCIES_DIR}/lib"
-			"${OGRE_SOURCE}/Dependencies/lib"
-		PATH_SUFFIXES "" Debug
-		)
 	find_program(Vulkan_GLSLC_EXECUTABLE
 		NAMES glslc
 		HINTS
@@ -119,14 +91,6 @@ else()
 			"${OGRE_VULKAN_SDK}/${VK_ARCH}/include"
 			"$ENV{VULKAN_SDK}/include"
 		)
-	find_path(Vulkan_SHADERC_INCLUDE_DIR
-		NAMES shaderc/shaderc.h
-		HINTS
-			"${OGRE_DEPENDENCIES_DIR}/lib" "${ENV_OGRE_DEPENDENCIES_DIR}/lib"
-			"${OGRE_SOURCE}/Dependencies/lib"
-			"${OGRE_VULKAN_SDK}/${VK_ARCH}/include"
-			"$ENV{VULKAN_SDK}/include"
-		)
 	find_library(Vulkan_LIBRARY
 		NAMES vulkan
 		HINTS
@@ -135,32 +99,17 @@ else()
 			"${OGRE_VULKAN_SDK}/${VK_ARCH}/lib"
 			"$ENV{VULKAN_SDK}/lib"
 		)
-	find_library(Vulkan_SHADERC_LIB_REL
-		NAMES shaderc_combined
-		HINTS
-			"${OGRE_DEPENDENCIES_DIR}/lib" "${ENV_OGRE_DEPENDENCIES_DIR}/lib"
-			"${OGRE_SOURCE}/Dependencies/lib"
-			"${OGRE_VULKAN_SDK}/${VK_ARCH}/lib"
-			"$ENV{VULKAN_SDK}/lib"
-		)
-	set( Vulkan_SHADERC_LIB_DBG ${Vulkan_SHADERC_LIB_REL} )
-	find_program(Vulkan_GLSLC_EXECUTABLE
-		NAMES glslc
-		HINTS
-			"${OGRE_VULKAN_SDK}/${VK_ARCH}/bin"
-			"$ENV{VULKAN_SDK}/bin"
-		)
 endif()
 
-set(Vulkan_LIBRARIES ${Vulkan_LIBRARY} optimized ${Vulkan_SHADERC_LIB_REL} debug ${Vulkan_SHADERC_LIB_DBG})
-set(Vulkan_INCLUDE_DIRS ${Vulkan_INCLUDE_DIR} ${Vulkan_SHADERC_INCLUDE_DIR})
+set(Vulkan_LIBRARIES ${Vulkan_LIBRARY})
+set(Vulkan_INCLUDE_DIRS ${Vulkan_INCLUDE_DIR})
 
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(Vulkan
   DEFAULT_MSG
-  Vulkan_LIBRARY Vulkan_SHADERC_LIB_REL Vulkan_SHADERC_LIB_DBG Vulkan_INCLUDE_DIR)
+  Vulkan_LIBRARY Vulkan_INCLUDE_DIR)
 
-mark_as_advanced(Vulkan_INCLUDE_DIR Vulkan_LIBRARY Vulkan_SHADERC_INCLUDE_DIR Vulkan_SHADERC_LIB_REL Vulkan_SHADERC_LIB_DBG Vulkan_GLSLC_EXECUTABLE)
+mark_as_advanced(Vulkan_INCLUDE_DIR Vulkan_LIBRARY  Vulkan_GLSLC_EXECUTABLE)
 
 if(Vulkan_FOUND AND NOT TARGET Vulkan::Vulkan)
   add_library(Vulkan::Vulkan UNKNOWN IMPORTED)
